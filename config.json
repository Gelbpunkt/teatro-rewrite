/* This is a JSON format configuration file
 */
{
    "listeners": [
        {
            //address: Ip address,0.0.0.0 by default
            "address": "0.0.0.0",
            //port: Port number
            "port": 7666,
            //https: If true, use https for security,false by default
            "https": false
        }
    ],
    "db_clients": [
        {
            //name: Name of the client,'default' by default
            //"name":"",
            //rdbms: Server type, postgresql,mysql or sqlite3, "postgresql" by default
            "rdbms": "postgresql",
            //filename: Sqlite3 db file name
            //"filename":"",
            //host: Server address,localhost by default
            "host": "127.0.0.1",
            //port: Server port, 5432 by default
            "port": 5432,
            //dbname: Database name
            "dbname": "idlerpg",
            //user: 'postgres' by default
            "user": "jens",
            //passwd: '' by default
            "passwd": "owo",
            //is_fast: false by default, if it is true, the client is faster but user can't call
            //any synchronous interface of it.
            "is_fast": true,
            //client_encoding: The character set used by the client. it is empty string by default which
            //means use the default character set.
            //"client_encoding": "",
            //connection_number: 1 by default, if the 'is_fast' is true, the number is the number of
            //connections per IO thread, otherwise it is the total number of all connections.
            "connection_number": 1
        }
    ],
    "app": {
        //threads_num: The number of IO threads, 1 by default, if the value is set to 0, the number of threads
        //is the number of CPU cores
        "threads_num": 0,
        //max_connections: maximum connections number,100000 by default
        "max_connections": 100000,
        //max_connections_per_ip: maximum connections number per clinet,0 by default which means no limit
        "max_connections_per_ip": 0,
        //enable_unicode_escaping_in_json: true by default, enable unicode escaping in json.
        "enable_unicode_escaping_in_json": true,
        //log: Set log output, drogon output logs to stdout by default
        "log": {
            //log_path: Log file path,empty by default,in which case,logs are output to the stdout
            //"log_path": "./",
            //logfile_base_name: Log file base name,empty by default which means drogon names logfile as
            //drogon.log ...
            "logfile_base_name": "",
            //log_size_limit: 100000000 bytes by default,
            //When the log file size reaches "log_size_limit", the log file is switched.
            "log_size_limit": 100000000,
            //log_level: "DEBUG" by default,options:"TRACE","DEBUG","INFO","WARN"
            //The TRACE level is only valid when built in DEBUG mode.
            "log_level": "DEBUG"
        },
        //run_as_daemon: False by default
        "run_as_daemon": false,
        //relaunch_on_error: False by default, if true, the program will be restart by the parent after exiting;
        "relaunch_on_error": false,
        //simple_controllers_map: Used to configure mapping from path to simple controller
        //idle_connection_timeout: Defaults to 60 seconds, the lifetime
        //of the connection without read or write
        "idle_connection_timeout": 60,
        //server_header_field: Set the 'Server' header field in each response sent by drogon,
        //empty string by default with which the 'Server' header field is set to "Server: drogon/version string\r\n"
        "server_header_field": "",
        //enable_server_header: Set true to force drogon to add a 'Server' header to each HTTP response. The default
        //value is true.
        "enable_server_header": true,
        //enable_date_header: Set true to force drogon to add a 'Date' header to each HTTP response. The default
        //value is true.
        "enable_date_header": true,
        //keepalive_requests: Set the maximum number of requests that can be served through one keep-alive connection.
        //After the maximum number of requests are made, the connection is closed.
        //The default value of 0 means no limit.
        "keepalive_requests": 0,
        //pipelining_requests: Set the maximum number of unhandled requests that can be cached in pipelining buffer.
        //After the maximum number of requests are made, the connection is closed.
        //The default value of 0 means no limit.
        "pipelining_requests": 0,
        //client_max_body_size: Set the maximum body size of HTTP requests received by drogon. The default value is "1M".
        //One can set it to "1024", "1k", "10M", "1G", etc. Setting it to "" means no limit.
        "client_max_body_size": "1M",
        //max_memory_body_size: Set the maximum body size in memory of HTTP requests received by drogon. The default value is "64K" bytes.
        //If the body size of a HTTP request exceeds this limit, the body is stored to a temporary file for processing.
        //Setting it to "" means no limit.
        "client_max_memory_body_size": "64K",
    },
    //plugins: Define all plugins running in the application
    "plugins": [
        {
            //name: The class name of the plugin
            "name": "Redis",
            //dependencies: Plugins that the plugin depends on. It can be commented out
            "dependencies": [],
            //Plugin config
            "config": {
                "host": "127.0.0.1",
                "port": 6379
            }
        }
    ],
    //custom_config: custom configuration for users. This object can be get by the app().getCustomConfig() method.
    "custom_config": {}
}